<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <modules>
        <module>pear-spring-boot-core</module>
        <module>pear-spring-boot-cache</module>
        <module>pear-spring-boot-constant</module>
        <module>pear-spring-boot-web</module>
        <module>pear-spring-boot-utils</module>
        <module>pear-spring-boot-basic</module>
        <module>pear-spring-boot-starter</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <name>cn.muzisheng.pear</name>
    <groupId>cn.muzisheng.pear</groupId>
    <artifactId>pear</artifactId>
    <version>1.2.2</version>
    <description>
        Pear is a back-end framework that facilitates the development of back-end personnel, with a built-in visual
        background management interface
    </description>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>



    <url>https://github.com/MuziSuper/pear</url>


    <developers>
        <developer>
            <name>MuZisheng</name>
            <email>lxh2022304460@163.com</email>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/MuziSuper/pear.git</connection>
        <developerConnection>scm:git:https://github.com/MuziSuper/pear.git</developerConnection>
        <url>https://github.com/MuziSuper/pear</url>
    </scm>

    <distributionManagement>
        <repository>
            <id>cn.muzisheng</id>
            <url>https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>cn.muzisheng</id>
            <url>https://ossrh-staging-api.central.sonatype.com/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <pear.version>1.2.2</pear.version>
        <java.version>17</java.version>
        <spring-boot.version>3.3.4</spring-boot.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <mybatis-plus.version>3.5.12</mybatis-plus.version>
        <jjwt.version>0.12.6</jjwt.version>
        <commons-cli.version>1.9.0</commons-cli.version>
        <jaxb-api.version>2.4.0-b180830.0359</jaxb-api.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot BOM 自动管理所有依赖版本-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>cn.muzisheng.pear</groupId>
                <artifactId>pear-spring-boot-cache</artifactId>
                <version>${pear.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.muzisheng.pear</groupId>
                <artifactId>pear-spring-boot-constant</artifactId>
                <version>${pear.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.muzisheng.pear</groupId>
                <artifactId>pear-spring-boot-basic</artifactId>
                <version>${pear.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.muzisheng.pear</groupId>
                <artifactId>pear-spring-boot-web</artifactId>
                <version>${pear.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.muzisheng.pear</groupId>
                <artifactId>pear-spring-boot-utils</artifactId>
                <version>${pear.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.muzisheng.pear</groupId>
                <artifactId>pear-spring-boot-core</artifactId>
                <version>${pear.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!--             构建web应用，包含SpringMVC和Tomcat与Spring-boot-starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 自动装配 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- 验证参数, 如@Valid -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- 模板引擎thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- mybatis-plus依赖 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
            <version>${mybatis-plus.version}</version>
            <optional>true</optional>
        </dependency>
        <!-- JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- mysql数据库 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>
        <!-- sqlite数据库 -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>
        <!-- 自动类属性工具包，可以省略getter、setter等方法 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <!-- 处理命令行参数 -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>
        <!-- 开发自定义starter需要，在编译时会自动收集配置类的条件，写到一个META-INF/spring-autoconfigure-metadata.json中-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- 测试工具 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Spring Boot Starter Data Redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- jwt框架 -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>
    </dependencies>


    <build>
        <pluginManagement>
        <plugins>
            <!-- 发布到Maven中央仓库，需先在settings.xml文件中配置server -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.8.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>cn.muzisheng</publishingServerId>
                    <autoPublish>true</autoPublish>
                    <waitUntil>published</waitUntil>
                </configuration>
            </plugin>
            <!-- 生成源码包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 生成 Javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.2.3</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
